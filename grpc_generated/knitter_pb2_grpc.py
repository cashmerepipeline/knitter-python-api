# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import assembly_pb2 as assembly__pb2
import asset_collection_pb2 as asset__collection__pb2
import asset_pb2 as asset__pb2
import country_pb2 as country__pb2
import cut_pb2 as cut__pb2
import data_pb2 as data__pb2
import data_server_pb2 as data__server__pb2
import data_stage_pb2 as data__stage__pb2
import entity_pb2 as entity__pb2
import epic_pb2 as epic__pb2
import file_data_pb2 as file__data__pb2
import group_pb2 as group__pb2
import language_code_pb2 as language__code__pb2
import manage_pb2 as manage__pb2
import manage_schema_pb2 as manage__schema__pb2
import name_pb2 as name__pb2
import prefab_pb2 as prefab__pb2
import project_pb2 as project__pb2
import reference_pb2 as reference__pb2
import sequence_pb2 as sequence__pb2
import set_collection_pb2 as set__collection__pb2
import set_pb2 as set__pb2
import specs_pb2 as specs__pb2
import view_pb2 as view__pb2


class KnitterGrpcStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetManages = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetManages',
                request_serializer=manage__pb2.GetManagesRequest.SerializeToString,
                response_deserializer=manage__pb2.GetManagesResponse.FromString,
                )
        self.GetManageEntryCount = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetManageEntryCount',
                request_serializer=manage__pb2.GetManageEntryCountRequest.SerializeToString,
                response_deserializer=manage__pb2.GetManageEntryCountResponse.FromString,
                )
        self.GetManageSchema = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetManageSchema',
                request_serializer=manage__schema__pb2.GetManageSchemaRequest.SerializeToString,
                response_deserializer=manage__schema__pb2.GetManageSchemaResponse.FromString,
                )
        self.MarkSchemaFieldRemoved = channel.unary_unary(
                '/io.knitter.KnitterGrpc/MarkSchemaFieldRemoved',
                request_serializer=manage__schema__pb2.MarkSchemaFieldRemovedRequest.SerializeToString,
                response_deserializer=manage__schema__pb2.MarkSchemaFieldRemovedResponse.FromString,
                )
        self.ChangeManageReadRule = channel.unary_unary(
                '/io.knitter.KnitterGrpc/ChangeManageReadRule',
                request_serializer=view__pb2.ChangeManageReadRuleRequest.SerializeToString,
                response_deserializer=view__pb2.ChangeManageReadRuleResponse.FromString,
                )
        self.ChangeManageWriteRule = channel.unary_unary(
                '/io.knitter.KnitterGrpc/ChangeManageWriteRule',
                request_serializer=view__pb2.ChangeManageWriteRuleRequest.SerializeToString,
                response_deserializer=view__pb2.ChangeManageWriteRuleResponse.FromString,
                )
        self.ChangeCollectionReadRule = channel.unary_unary(
                '/io.knitter.KnitterGrpc/ChangeCollectionReadRule',
                request_serializer=view__pb2.ChangeCollectionReadRuleRequest.SerializeToString,
                response_deserializer=view__pb2.ChangeCollectionReadRuleResponse.FromString,
                )
        self.ChangeCollectionWriteRule = channel.unary_unary(
                '/io.knitter.KnitterGrpc/ChangeCollectionWriteRule',
                request_serializer=view__pb2.ChangeCollectionWriteRuleRequest.SerializeToString,
                response_deserializer=view__pb2.ChangeCollectionWriteRuleResponse.FromString,
                )
        self.ChangeFieldReadRule = channel.unary_unary(
                '/io.knitter.KnitterGrpc/ChangeFieldReadRule',
                request_serializer=view__pb2.ChangeFieldReadRuleRequest.SerializeToString,
                response_deserializer=view__pb2.ChangeFieldReadRuleResponse.FromString,
                )
        self.ChangeFieldWriteRule = channel.unary_unary(
                '/io.knitter.KnitterGrpc/ChangeFieldWriteRule',
                request_serializer=view__pb2.ChangeFieldWriteRuleRequest.SerializeToString,
                response_deserializer=view__pb2.ChangeFieldWriteRuleResponse.FromString,
                )
        self.GetEntity = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetEntity',
                request_serializer=entity__pb2.GetEntityRequest.SerializeToString,
                response_deserializer=entity__pb2.GetEntityResponse.FromString,
                )
        self.GetEntities = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetEntities',
                request_serializer=entity__pb2.GetEntitiesRequest.SerializeToString,
                response_deserializer=entity__pb2.GetEntitiesResponse.FromString,
                )
        self.GetEntitiesPage = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetEntitiesPage',
                request_serializer=entity__pb2.GetEntitiesPageRequest.SerializeToString,
                response_deserializer=entity__pb2.GetEntitiesPageResponse.FromString,
                )
        self.MarkEntityRemoved = channel.unary_unary(
                '/io.knitter.KnitterGrpc/MarkEntityRemoved',
                request_serializer=entity__pb2.MarkEntityRemovedRequest.SerializeToString,
                response_deserializer=entity__pb2.MarkEntityRemovedResponse.FromString,
                )
        self.RecoverRemovedEntity = channel.unary_unary(
                '/io.knitter.KnitterGrpc/RecoverRemovedEntity',
                request_serializer=entity__pb2.RecoverRemovedEntityRequest.SerializeToString,
                response_deserializer=entity__pb2.RecoverRemovedEntityResponse.FromString,
                )
        self.GetRemovedEntitiesPage = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetRemovedEntitiesPage',
                request_serializer=entity__pb2.GetRemovedEntitiesPageRequest.SerializeToString,
                response_deserializer=entity__pb2.GetRemovedEntitiesPageResponse.FromString,
                )
        self.EditEntityField = channel.unary_unary(
                '/io.knitter.KnitterGrpc/EditEntityField',
                request_serializer=entity__pb2.EditEntityFieldRequest.SerializeToString,
                response_deserializer=entity__pb2.EditEntityFieldResponse.FromString,
                )
        self.EditEntityMapField = channel.unary_unary(
                '/io.knitter.KnitterGrpc/EditEntityMapField',
                request_serializer=entity__pb2.EditEntityMapFieldRequest.SerializeToString,
                response_deserializer=entity__pb2.EditEntityMapFieldResponse.FromString,
                )
        self.EditEntityMapFieldRemoveKey = channel.unary_unary(
                '/io.knitter.KnitterGrpc/EditEntityMapFieldRemoveKey',
                request_serializer=entity__pb2.EditEntityMapFieldRemoveKeyRequest.SerializeToString,
                response_deserializer=entity__pb2.EditEntityMapFieldRemoveKeyResponse.FromString,
                )
        self.EditEntityArrayFieldAddItems = channel.unary_unary(
                '/io.knitter.KnitterGrpc/EditEntityArrayFieldAddItems',
                request_serializer=entity__pb2.EditEntityArrayFieldAddItemsRequest.SerializeToString,
                response_deserializer=entity__pb2.EditEntityArrayFieldAddItemsResponse.FromString,
                )
        self.EditEntityArrayFieldRemoveItems = channel.unary_unary(
                '/io.knitter.KnitterGrpc/EditEntityArrayFieldRemoveItems',
                request_serializer=entity__pb2.EditEntityArrayFieldRemoveItemsRequest.SerializeToString,
                response_deserializer=entity__pb2.EditEntityArrayFieldRemoveItemsResponse.FromString,
                )
        self.Rename = channel.unary_unary(
                '/io.knitter.KnitterGrpc/Rename',
                request_serializer=name__pb2.RenameRequest.SerializeToString,
                response_deserializer=name__pb2.RenameResponse.FromString,
                )
        self.NewLanguageName = channel.unary_unary(
                '/io.knitter.KnitterGrpc/NewLanguageName',
                request_serializer=name__pb2.NewLanguageNameRequest.SerializeToString,
                response_deserializer=name__pb2.NewLanguageNameResponse.FromString,
                )
        self.NewCountry = channel.unary_unary(
                '/io.knitter.KnitterGrpc/NewCountry',
                request_serializer=country__pb2.NewCountryRequest.SerializeToString,
                response_deserializer=country__pb2.NewCountryResponse.FromString,
                )
        self.NewLanguageCode = channel.unary_unary(
                '/io.knitter.KnitterGrpc/NewLanguageCode',
                request_serializer=language__code__pb2.NewLanguageCodeRequest.SerializeToString,
                response_deserializer=language__code__pb2.NewLanguageCodeResponse.FromString,
                )
        self.NewGroup = channel.unary_unary(
                '/io.knitter.KnitterGrpc/NewGroup',
                request_serializer=group__pb2.NewGroupRequest.SerializeToString,
                response_deserializer=group__pb2.NewGroupResponse.FromString,
                )
        self.GetDataServerConfigs = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetDataServerConfigs',
                request_serializer=data__server__pb2.GetDataServerConfigsRequest.SerializeToString,
                response_deserializer=data__server__pb2.GetDataServerConfigsResponse.FromString,
                )
        self.NewData = channel.unary_unary(
                '/io.knitter.KnitterGrpc/NewData',
                request_serializer=data__pb2.NewDataRequest.SerializeToString,
                response_deserializer=data__pb2.NewDataResponse.FromString,
                )
        self.ListData = channel.unary_unary(
                '/io.knitter.KnitterGrpc/ListData',
                request_serializer=data__pb2.ListDataRequest.SerializeToString,
                response_deserializer=data__pb2.ListDataResponse.FromString,
                )
        self.ListDataStages = channel.unary_unary(
                '/io.knitter.KnitterGrpc/ListDataStages',
                request_serializer=data__stage__pb2.ListDataStagesRequest.SerializeToString,
                response_deserializer=data__stage__pb2.ListDataStagesResponse.FromString,
                )
        self.AddDataStageVersion = channel.unary_unary(
                '/io.knitter.KnitterGrpc/AddDataStageVersion',
                request_serializer=data__stage__pb2.AddDataStageVersionRequest.SerializeToString,
                response_deserializer=data__stage__pb2.AddDataStageVersionResponse.FromString,
                )
        self.MarkDataRemoved = channel.unary_unary(
                '/io.knitter.KnitterGrpc/MarkDataRemoved',
                request_serializer=data__pb2.MarkDataRemovedRequest.SerializeToString,
                response_deserializer=data__pb2.MarkDataRemovedResponse.FromString,
                )
        self.FileDataUploadFile = channel.stream_stream(
                '/io.knitter.KnitterGrpc/FileDataUploadFile',
                request_serializer=file__data__pb2.FileDataUploadFileRequest.SerializeToString,
                response_deserializer=file__data__pb2.FileDataUploadFileResponse.FromString,
                )
        self.FileDataDownloadFile = channel.stream_stream(
                '/io.knitter.KnitterGrpc/FileDataDownloadFile',
                request_serializer=file__data__pb2.FileDataDownloadFileRequest.SerializeToString,
                response_deserializer=file__data__pb2.FileDataDownloadFileResponse.FromString,
                )
        self.NewProject = channel.unary_unary(
                '/io.knitter.KnitterGrpc/NewProject',
                request_serializer=project__pb2.NewProjectRequest.SerializeToString,
                response_deserializer=project__pb2.NewProjectResponse.FromString,
                )
        self.AssociateAssetCollectionsToProject = channel.unary_unary(
                '/io.knitter.KnitterGrpc/AssociateAssetCollectionsToProject',
                request_serializer=project__pb2.AssociateAssetCollectionsToProjectRequest.SerializeToString,
                response_deserializer=project__pb2.AssociateAssetCollectionsToProjectResponse.FromString,
                )
        self.AssociateSetCollectionsToProject = channel.unary_unary(
                '/io.knitter.KnitterGrpc/AssociateSetCollectionsToProject',
                request_serializer=project__pb2.AssociateSetCollectionsToProjectRequest.SerializeToString,
                response_deserializer=project__pb2.AssociateSetCollectionsToProjectResponse.FromString,
                )
        self.GetProjectAssociatedAssetCollections = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetProjectAssociatedAssetCollections',
                request_serializer=project__pb2.GetProjectAssociatedAssetCollectionsRequest.SerializeToString,
                response_deserializer=project__pb2.GetProjectAssociatedAssetCollectionsResponse.FromString,
                )
        self.GetProjectAssociatedSetCollections = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetProjectAssociatedSetCollections',
                request_serializer=project__pb2.GetProjectAssociatedSetCollectionsRequest.SerializeToString,
                response_deserializer=project__pb2.GetProjectAssociatedSetCollectionsResponse.FromString,
                )
        self.NewAssetCollection = channel.unary_unary(
                '/io.knitter.KnitterGrpc/NewAssetCollection',
                request_serializer=asset__collection__pb2.NewAssetCollectionRequest.SerializeToString,
                response_deserializer=asset__collection__pb2.NewAssetCollectionResponse.FromString,
                )
        self.GetAssetCollectionAssetTotalPagesCount = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetAssetCollectionAssetTotalPagesCount',
                request_serializer=asset__collection__pb2.GetAssetCollectionAssetTotalPagesCountRequest.SerializeToString,
                response_deserializer=asset__collection__pb2.GetAssetCollectionAssetTotalPagesCountResponse.FromString,
                )
        self.GetAssetCollectionAssemblyTotalPagesCount = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetAssetCollectionAssemblyTotalPagesCount',
                request_serializer=asset__collection__pb2.GetAssetCollectionAssemblyTotalPagesCountRequest.SerializeToString,
                response_deserializer=asset__collection__pb2.GetAssetCollectionAssemblyTotalPagesCountResponse.FromString,
                )
        self.GetAssetCollectionAssetsPage = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetAssetCollectionAssetsPage',
                request_serializer=asset__collection__pb2.GetAssetCollectionAssetsPageRequest.SerializeToString,
                response_deserializer=asset__collection__pb2.GetAssetCollectionAssetsPageResponse.FromString,
                )
        self.GetAssetCollectionAssembliesPage = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetAssetCollectionAssembliesPage',
                request_serializer=asset__collection__pb2.GetAssetCollectionAssembliesPageRequest.SerializeToString,
                response_deserializer=asset__collection__pb2.GetAssetCollectionAssembliesPageResponse.FromString,
                )
        self.MarkAssetCollectionStatus = channel.unary_unary(
                '/io.knitter.KnitterGrpc/MarkAssetCollectionStatus',
                request_serializer=asset__collection__pb2.MarkAssetCollectionStatusRequest.SerializeToString,
                response_deserializer=asset__collection__pb2.MarkAssetCollectionStatusResponse.FromString,
                )
        self.NewAsset = channel.unary_unary(
                '/io.knitter.KnitterGrpc/NewAsset',
                request_serializer=asset__pb2.NewAssetRequest.SerializeToString,
                response_deserializer=asset__pb2.NewAssetResponse.FromString,
                )
        self.GetReferencedAssets = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetReferencedAssets',
                request_serializer=asset__pb2.GetReferencedAssetsRequest.SerializeToString,
                response_deserializer=asset__pb2.GetReferencedAssetsResponse.FromString,
                )
        self.MarkAssetStatus = channel.unary_unary(
                '/io.knitter.KnitterGrpc/MarkAssetStatus',
                request_serializer=asset__pb2.MarkAssetStatusRequest.SerializeToString,
                response_deserializer=asset__pb2.MarkAssetStatusResponse.FromString,
                )
        self.NewAssembly = channel.unary_unary(
                '/io.knitter.KnitterGrpc/NewAssembly',
                request_serializer=assembly__pb2.NewAssemblyRequest.SerializeToString,
                response_deserializer=assembly__pb2.NewAssemblyResponse.FromString,
                )
        self.NewEpic = channel.unary_unary(
                '/io.knitter.KnitterGrpc/NewEpic',
                request_serializer=epic__pb2.NewEpicRequest.SerializeToString,
                response_deserializer=epic__pb2.NewEpicResponse.FromString,
                )
        self.GetEpicSequences = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetEpicSequences',
                request_serializer=epic__pb2.GetEpicSequencesRequest.SerializeToString,
                response_deserializer=epic__pb2.GetEpicSequencesResponse.FromString,
                )
        self.NewSequence = channel.unary_unary(
                '/io.knitter.KnitterGrpc/NewSequence',
                request_serializer=sequence__pb2.NewSequenceRequest.SerializeToString,
                response_deserializer=sequence__pb2.NewSequenceResponse.FromString,
                )
        self.GetSequenceCuts = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetSequenceCuts',
                request_serializer=sequence__pb2.GetSequenceCutsRequest.SerializeToString,
                response_deserializer=sequence__pb2.GetSequenceCutsResponse.FromString,
                )
        self.NewCut = channel.unary_unary(
                '/io.knitter.KnitterGrpc/NewCut',
                request_serializer=cut__pb2.NewCutRequest.SerializeToString,
                response_deserializer=cut__pb2.NewCutResponse.FromString,
                )
        self.GetCutReferencedAssets = channel.unary_unary(
                '/io.knitter.KnitterGrpc/GetCutReferencedAssets',
                request_serializer=cut__pb2.GetCutReferencedAssetsRequest.SerializeToString,
                response_deserializer=cut__pb2.GetCutReferencedAssetsResponse.FromString,
                )
        self.MarkCutStatus = channel.unary_unary(
                '/io.knitter.KnitterGrpc/MarkCutStatus',
                request_serializer=cut__pb2.MarkCutStatusRequest.SerializeToString,
                response_deserializer=cut__pb2.MarkCutStatusResponse.FromString,
                )
        self.NewSetCollection = channel.unary_unary(
                '/io.knitter.KnitterGrpc/NewSetCollection',
                request_serializer=set__collection__pb2.NewSetCollectionRequest.SerializeToString,
                response_deserializer=set__collection__pb2.NewSetCollectionResponse.FromString,
                )
        self.NewSet = channel.unary_unary(
                '/io.knitter.KnitterGrpc/NewSet',
                request_serializer=set__pb2.NewSetRequest.SerializeToString,
                response_deserializer=set__pb2.NewSetResponse.FromString,
                )
        self.MarkSetSatus = channel.unary_unary(
                '/io.knitter.KnitterGrpc/MarkSetSatus',
                request_serializer=set__pb2.MarkSetStatusRequest.SerializeToString,
                response_deserializer=set__pb2.MarkSetStatusResponse.FromString,
                )
        self.NewSpecs = channel.unary_unary(
                '/io.knitter.KnitterGrpc/NewSpecs',
                request_serializer=specs__pb2.NewSpecsRequest.SerializeToString,
                response_deserializer=specs__pb2.NewSpecsResponse.FromString,
                )
        self.ListSpecs = channel.unary_unary(
                '/io.knitter.KnitterGrpc/ListSpecs',
                request_serializer=specs__pb2.ListSpecsRequest.SerializeToString,
                response_deserializer=specs__pb2.ListSpecsResponse.FromString,
                )
        self.ListSpecsPrefabs = channel.unary_unary(
                '/io.knitter.KnitterGrpc/ListSpecsPrefabs',
                request_serializer=specs__pb2.ListSpecsPrefabsRequest.SerializeToString,
                response_deserializer=specs__pb2.ListSpecsPrefabsResponse.FromString,
                )
        self.NewPrefab = channel.unary_unary(
                '/io.knitter.KnitterGrpc/NewPrefab',
                request_serializer=prefab__pb2.NewPrefabRequest.SerializeToString,
                response_deserializer=prefab__pb2.NewPrefabResponse.FromString,
                )
        self.AddReferences = channel.unary_unary(
                '/io.knitter.KnitterGrpc/AddReferences',
                request_serializer=reference__pb2.AddReferencesRequest.SerializeToString,
                response_deserializer=reference__pb2.AddReferencesResponse.FromString,
                )
        self.RemoveReferences = channel.unary_unary(
                '/io.knitter.KnitterGrpc/RemoveReferences',
                request_serializer=reference__pb2.RemoveReferencesRequest.SerializeToString,
                response_deserializer=reference__pb2.RemoveReferencesResponse.FromString,
                )
        self.ListReferences = channel.unary_unary(
                '/io.knitter.KnitterGrpc/ListReferences',
                request_serializer=reference__pb2.ListReferencesRequest.SerializeToString,
                response_deserializer=reference__pb2.ListReferencesResponse.FromString,
                )
        self.ChangeReference = channel.unary_unary(
                '/io.knitter.KnitterGrpc/ChangeReference',
                request_serializer=reference__pb2.ChangeReferencePrefabRequest.SerializeToString,
                response_deserializer=reference__pb2.ChangeReferencePrefabResponse.FromString,
                )


class KnitterGrpcServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetManages(self, request, context):
        """管理
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetManageEntryCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetManageSchema(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkSchemaFieldRemoved(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeManageReadRule(self, request, context):
        """可见性权限
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeManageWriteRule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeCollectionReadRule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeCollectionWriteRule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeFieldReadRule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeFieldWriteRule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntity(self, request, context):
        """实体，主要是实体查询
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntities(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEntitiesPage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkEntityRemoved(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecoverRemovedEntity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRemovedEntitiesPage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditEntityField(self, request, context):
        """通用编辑实体属性，非数据结构
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditEntityMapField(self, request, context):
        """通用编辑实体属性，MAP数据结构
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditEntityMapFieldRemoveKey(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditEntityArrayFieldAddItems(self, request, context):
        """通用编辑实体属性，List数据结构
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditEntityArrayFieldRemoveItems(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Rename(self, request, context):
        """名字
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewLanguageName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewCountry(self, request, context):
        """国家
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewLanguageCode(self, request, context):
        """语言编码
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewGroup(self, request, context):
        """组
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDataServerConfigs(self, request, context):
        """数据
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDataStages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddDataStageVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkDataRemoved(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FileDataUploadFile(self, request_iterator, context):
        """数据操作
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FileDataDownloadFile(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewProject(self, request, context):
        """项目
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssociateAssetCollectionsToProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AssociateSetCollectionsToProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProjectAssociatedAssetCollections(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProjectAssociatedSetCollections(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewAssetCollection(self, request, context):
        """资产集 
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetCollectionAssetTotalPagesCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetCollectionAssemblyTotalPagesCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetCollectionAssetsPage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetCollectionAssembliesPage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkAssetCollectionStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewAsset(self, request, context):
        """资产
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetReferencedAssets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkAssetStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewAssembly(self, request, context):
        """组合
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewEpic(self, request, context):
        """集
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEpicSequences(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewSequence(self, request, context):
        """章节
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSequenceCuts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewCut(self, request, context):
        """镜头
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCutReferencedAssets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkCutStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewSetCollection(self, request, context):
        """景集合
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewSet(self, request, context):
        """景
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MarkSetSatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewSpecs(self, request, context):
        """规格
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSpecs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSpecsPrefabs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NewPrefab(self, request, context):
        """预制件
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddReferences(self, request, context):
        """引用
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveReferences(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListReferences(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChangeReference(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KnitterGrpcServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetManages': grpc.unary_unary_rpc_method_handler(
                    servicer.GetManages,
                    request_deserializer=manage__pb2.GetManagesRequest.FromString,
                    response_serializer=manage__pb2.GetManagesResponse.SerializeToString,
            ),
            'GetManageEntryCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetManageEntryCount,
                    request_deserializer=manage__pb2.GetManageEntryCountRequest.FromString,
                    response_serializer=manage__pb2.GetManageEntryCountResponse.SerializeToString,
            ),
            'GetManageSchema': grpc.unary_unary_rpc_method_handler(
                    servicer.GetManageSchema,
                    request_deserializer=manage__schema__pb2.GetManageSchemaRequest.FromString,
                    response_serializer=manage__schema__pb2.GetManageSchemaResponse.SerializeToString,
            ),
            'MarkSchemaFieldRemoved': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkSchemaFieldRemoved,
                    request_deserializer=manage__schema__pb2.MarkSchemaFieldRemovedRequest.FromString,
                    response_serializer=manage__schema__pb2.MarkSchemaFieldRemovedResponse.SerializeToString,
            ),
            'ChangeManageReadRule': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeManageReadRule,
                    request_deserializer=view__pb2.ChangeManageReadRuleRequest.FromString,
                    response_serializer=view__pb2.ChangeManageReadRuleResponse.SerializeToString,
            ),
            'ChangeManageWriteRule': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeManageWriteRule,
                    request_deserializer=view__pb2.ChangeManageWriteRuleRequest.FromString,
                    response_serializer=view__pb2.ChangeManageWriteRuleResponse.SerializeToString,
            ),
            'ChangeCollectionReadRule': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeCollectionReadRule,
                    request_deserializer=view__pb2.ChangeCollectionReadRuleRequest.FromString,
                    response_serializer=view__pb2.ChangeCollectionReadRuleResponse.SerializeToString,
            ),
            'ChangeCollectionWriteRule': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeCollectionWriteRule,
                    request_deserializer=view__pb2.ChangeCollectionWriteRuleRequest.FromString,
                    response_serializer=view__pb2.ChangeCollectionWriteRuleResponse.SerializeToString,
            ),
            'ChangeFieldReadRule': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeFieldReadRule,
                    request_deserializer=view__pb2.ChangeFieldReadRuleRequest.FromString,
                    response_serializer=view__pb2.ChangeFieldReadRuleResponse.SerializeToString,
            ),
            'ChangeFieldWriteRule': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeFieldWriteRule,
                    request_deserializer=view__pb2.ChangeFieldWriteRuleRequest.FromString,
                    response_serializer=view__pb2.ChangeFieldWriteRuleResponse.SerializeToString,
            ),
            'GetEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntity,
                    request_deserializer=entity__pb2.GetEntityRequest.FromString,
                    response_serializer=entity__pb2.GetEntityResponse.SerializeToString,
            ),
            'GetEntities': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntities,
                    request_deserializer=entity__pb2.GetEntitiesRequest.FromString,
                    response_serializer=entity__pb2.GetEntitiesResponse.SerializeToString,
            ),
            'GetEntitiesPage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEntitiesPage,
                    request_deserializer=entity__pb2.GetEntitiesPageRequest.FromString,
                    response_serializer=entity__pb2.GetEntitiesPageResponse.SerializeToString,
            ),
            'MarkEntityRemoved': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkEntityRemoved,
                    request_deserializer=entity__pb2.MarkEntityRemovedRequest.FromString,
                    response_serializer=entity__pb2.MarkEntityRemovedResponse.SerializeToString,
            ),
            'RecoverRemovedEntity': grpc.unary_unary_rpc_method_handler(
                    servicer.RecoverRemovedEntity,
                    request_deserializer=entity__pb2.RecoverRemovedEntityRequest.FromString,
                    response_serializer=entity__pb2.RecoverRemovedEntityResponse.SerializeToString,
            ),
            'GetRemovedEntitiesPage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRemovedEntitiesPage,
                    request_deserializer=entity__pb2.GetRemovedEntitiesPageRequest.FromString,
                    response_serializer=entity__pb2.GetRemovedEntitiesPageResponse.SerializeToString,
            ),
            'EditEntityField': grpc.unary_unary_rpc_method_handler(
                    servicer.EditEntityField,
                    request_deserializer=entity__pb2.EditEntityFieldRequest.FromString,
                    response_serializer=entity__pb2.EditEntityFieldResponse.SerializeToString,
            ),
            'EditEntityMapField': grpc.unary_unary_rpc_method_handler(
                    servicer.EditEntityMapField,
                    request_deserializer=entity__pb2.EditEntityMapFieldRequest.FromString,
                    response_serializer=entity__pb2.EditEntityMapFieldResponse.SerializeToString,
            ),
            'EditEntityMapFieldRemoveKey': grpc.unary_unary_rpc_method_handler(
                    servicer.EditEntityMapFieldRemoveKey,
                    request_deserializer=entity__pb2.EditEntityMapFieldRemoveKeyRequest.FromString,
                    response_serializer=entity__pb2.EditEntityMapFieldRemoveKeyResponse.SerializeToString,
            ),
            'EditEntityArrayFieldAddItems': grpc.unary_unary_rpc_method_handler(
                    servicer.EditEntityArrayFieldAddItems,
                    request_deserializer=entity__pb2.EditEntityArrayFieldAddItemsRequest.FromString,
                    response_serializer=entity__pb2.EditEntityArrayFieldAddItemsResponse.SerializeToString,
            ),
            'EditEntityArrayFieldRemoveItems': grpc.unary_unary_rpc_method_handler(
                    servicer.EditEntityArrayFieldRemoveItems,
                    request_deserializer=entity__pb2.EditEntityArrayFieldRemoveItemsRequest.FromString,
                    response_serializer=entity__pb2.EditEntityArrayFieldRemoveItemsResponse.SerializeToString,
            ),
            'Rename': grpc.unary_unary_rpc_method_handler(
                    servicer.Rename,
                    request_deserializer=name__pb2.RenameRequest.FromString,
                    response_serializer=name__pb2.RenameResponse.SerializeToString,
            ),
            'NewLanguageName': grpc.unary_unary_rpc_method_handler(
                    servicer.NewLanguageName,
                    request_deserializer=name__pb2.NewLanguageNameRequest.FromString,
                    response_serializer=name__pb2.NewLanguageNameResponse.SerializeToString,
            ),
            'NewCountry': grpc.unary_unary_rpc_method_handler(
                    servicer.NewCountry,
                    request_deserializer=country__pb2.NewCountryRequest.FromString,
                    response_serializer=country__pb2.NewCountryResponse.SerializeToString,
            ),
            'NewLanguageCode': grpc.unary_unary_rpc_method_handler(
                    servicer.NewLanguageCode,
                    request_deserializer=language__code__pb2.NewLanguageCodeRequest.FromString,
                    response_serializer=language__code__pb2.NewLanguageCodeResponse.SerializeToString,
            ),
            'NewGroup': grpc.unary_unary_rpc_method_handler(
                    servicer.NewGroup,
                    request_deserializer=group__pb2.NewGroupRequest.FromString,
                    response_serializer=group__pb2.NewGroupResponse.SerializeToString,
            ),
            'GetDataServerConfigs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDataServerConfigs,
                    request_deserializer=data__server__pb2.GetDataServerConfigsRequest.FromString,
                    response_serializer=data__server__pb2.GetDataServerConfigsResponse.SerializeToString,
            ),
            'NewData': grpc.unary_unary_rpc_method_handler(
                    servicer.NewData,
                    request_deserializer=data__pb2.NewDataRequest.FromString,
                    response_serializer=data__pb2.NewDataResponse.SerializeToString,
            ),
            'ListData': grpc.unary_unary_rpc_method_handler(
                    servicer.ListData,
                    request_deserializer=data__pb2.ListDataRequest.FromString,
                    response_serializer=data__pb2.ListDataResponse.SerializeToString,
            ),
            'ListDataStages': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDataStages,
                    request_deserializer=data__stage__pb2.ListDataStagesRequest.FromString,
                    response_serializer=data__stage__pb2.ListDataStagesResponse.SerializeToString,
            ),
            'AddDataStageVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.AddDataStageVersion,
                    request_deserializer=data__stage__pb2.AddDataStageVersionRequest.FromString,
                    response_serializer=data__stage__pb2.AddDataStageVersionResponse.SerializeToString,
            ),
            'MarkDataRemoved': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkDataRemoved,
                    request_deserializer=data__pb2.MarkDataRemovedRequest.FromString,
                    response_serializer=data__pb2.MarkDataRemovedResponse.SerializeToString,
            ),
            'FileDataUploadFile': grpc.stream_stream_rpc_method_handler(
                    servicer.FileDataUploadFile,
                    request_deserializer=file__data__pb2.FileDataUploadFileRequest.FromString,
                    response_serializer=file__data__pb2.FileDataUploadFileResponse.SerializeToString,
            ),
            'FileDataDownloadFile': grpc.stream_stream_rpc_method_handler(
                    servicer.FileDataDownloadFile,
                    request_deserializer=file__data__pb2.FileDataDownloadFileRequest.FromString,
                    response_serializer=file__data__pb2.FileDataDownloadFileResponse.SerializeToString,
            ),
            'NewProject': grpc.unary_unary_rpc_method_handler(
                    servicer.NewProject,
                    request_deserializer=project__pb2.NewProjectRequest.FromString,
                    response_serializer=project__pb2.NewProjectResponse.SerializeToString,
            ),
            'AssociateAssetCollectionsToProject': grpc.unary_unary_rpc_method_handler(
                    servicer.AssociateAssetCollectionsToProject,
                    request_deserializer=project__pb2.AssociateAssetCollectionsToProjectRequest.FromString,
                    response_serializer=project__pb2.AssociateAssetCollectionsToProjectResponse.SerializeToString,
            ),
            'AssociateSetCollectionsToProject': grpc.unary_unary_rpc_method_handler(
                    servicer.AssociateSetCollectionsToProject,
                    request_deserializer=project__pb2.AssociateSetCollectionsToProjectRequest.FromString,
                    response_serializer=project__pb2.AssociateSetCollectionsToProjectResponse.SerializeToString,
            ),
            'GetProjectAssociatedAssetCollections': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjectAssociatedAssetCollections,
                    request_deserializer=project__pb2.GetProjectAssociatedAssetCollectionsRequest.FromString,
                    response_serializer=project__pb2.GetProjectAssociatedAssetCollectionsResponse.SerializeToString,
            ),
            'GetProjectAssociatedSetCollections': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjectAssociatedSetCollections,
                    request_deserializer=project__pb2.GetProjectAssociatedSetCollectionsRequest.FromString,
                    response_serializer=project__pb2.GetProjectAssociatedSetCollectionsResponse.SerializeToString,
            ),
            'NewAssetCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.NewAssetCollection,
                    request_deserializer=asset__collection__pb2.NewAssetCollectionRequest.FromString,
                    response_serializer=asset__collection__pb2.NewAssetCollectionResponse.SerializeToString,
            ),
            'GetAssetCollectionAssetTotalPagesCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetCollectionAssetTotalPagesCount,
                    request_deserializer=asset__collection__pb2.GetAssetCollectionAssetTotalPagesCountRequest.FromString,
                    response_serializer=asset__collection__pb2.GetAssetCollectionAssetTotalPagesCountResponse.SerializeToString,
            ),
            'GetAssetCollectionAssemblyTotalPagesCount': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetCollectionAssemblyTotalPagesCount,
                    request_deserializer=asset__collection__pb2.GetAssetCollectionAssemblyTotalPagesCountRequest.FromString,
                    response_serializer=asset__collection__pb2.GetAssetCollectionAssemblyTotalPagesCountResponse.SerializeToString,
            ),
            'GetAssetCollectionAssetsPage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetCollectionAssetsPage,
                    request_deserializer=asset__collection__pb2.GetAssetCollectionAssetsPageRequest.FromString,
                    response_serializer=asset__collection__pb2.GetAssetCollectionAssetsPageResponse.SerializeToString,
            ),
            'GetAssetCollectionAssembliesPage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetCollectionAssembliesPage,
                    request_deserializer=asset__collection__pb2.GetAssetCollectionAssembliesPageRequest.FromString,
                    response_serializer=asset__collection__pb2.GetAssetCollectionAssembliesPageResponse.SerializeToString,
            ),
            'MarkAssetCollectionStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkAssetCollectionStatus,
                    request_deserializer=asset__collection__pb2.MarkAssetCollectionStatusRequest.FromString,
                    response_serializer=asset__collection__pb2.MarkAssetCollectionStatusResponse.SerializeToString,
            ),
            'NewAsset': grpc.unary_unary_rpc_method_handler(
                    servicer.NewAsset,
                    request_deserializer=asset__pb2.NewAssetRequest.FromString,
                    response_serializer=asset__pb2.NewAssetResponse.SerializeToString,
            ),
            'GetReferencedAssets': grpc.unary_unary_rpc_method_handler(
                    servicer.GetReferencedAssets,
                    request_deserializer=asset__pb2.GetReferencedAssetsRequest.FromString,
                    response_serializer=asset__pb2.GetReferencedAssetsResponse.SerializeToString,
            ),
            'MarkAssetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkAssetStatus,
                    request_deserializer=asset__pb2.MarkAssetStatusRequest.FromString,
                    response_serializer=asset__pb2.MarkAssetStatusResponse.SerializeToString,
            ),
            'NewAssembly': grpc.unary_unary_rpc_method_handler(
                    servicer.NewAssembly,
                    request_deserializer=assembly__pb2.NewAssemblyRequest.FromString,
                    response_serializer=assembly__pb2.NewAssemblyResponse.SerializeToString,
            ),
            'NewEpic': grpc.unary_unary_rpc_method_handler(
                    servicer.NewEpic,
                    request_deserializer=epic__pb2.NewEpicRequest.FromString,
                    response_serializer=epic__pb2.NewEpicResponse.SerializeToString,
            ),
            'GetEpicSequences': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEpicSequences,
                    request_deserializer=epic__pb2.GetEpicSequencesRequest.FromString,
                    response_serializer=epic__pb2.GetEpicSequencesResponse.SerializeToString,
            ),
            'NewSequence': grpc.unary_unary_rpc_method_handler(
                    servicer.NewSequence,
                    request_deserializer=sequence__pb2.NewSequenceRequest.FromString,
                    response_serializer=sequence__pb2.NewSequenceResponse.SerializeToString,
            ),
            'GetSequenceCuts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSequenceCuts,
                    request_deserializer=sequence__pb2.GetSequenceCutsRequest.FromString,
                    response_serializer=sequence__pb2.GetSequenceCutsResponse.SerializeToString,
            ),
            'NewCut': grpc.unary_unary_rpc_method_handler(
                    servicer.NewCut,
                    request_deserializer=cut__pb2.NewCutRequest.FromString,
                    response_serializer=cut__pb2.NewCutResponse.SerializeToString,
            ),
            'GetCutReferencedAssets': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCutReferencedAssets,
                    request_deserializer=cut__pb2.GetCutReferencedAssetsRequest.FromString,
                    response_serializer=cut__pb2.GetCutReferencedAssetsResponse.SerializeToString,
            ),
            'MarkCutStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkCutStatus,
                    request_deserializer=cut__pb2.MarkCutStatusRequest.FromString,
                    response_serializer=cut__pb2.MarkCutStatusResponse.SerializeToString,
            ),
            'NewSetCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.NewSetCollection,
                    request_deserializer=set__collection__pb2.NewSetCollectionRequest.FromString,
                    response_serializer=set__collection__pb2.NewSetCollectionResponse.SerializeToString,
            ),
            'NewSet': grpc.unary_unary_rpc_method_handler(
                    servicer.NewSet,
                    request_deserializer=set__pb2.NewSetRequest.FromString,
                    response_serializer=set__pb2.NewSetResponse.SerializeToString,
            ),
            'MarkSetSatus': grpc.unary_unary_rpc_method_handler(
                    servicer.MarkSetSatus,
                    request_deserializer=set__pb2.MarkSetStatusRequest.FromString,
                    response_serializer=set__pb2.MarkSetStatusResponse.SerializeToString,
            ),
            'NewSpecs': grpc.unary_unary_rpc_method_handler(
                    servicer.NewSpecs,
                    request_deserializer=specs__pb2.NewSpecsRequest.FromString,
                    response_serializer=specs__pb2.NewSpecsResponse.SerializeToString,
            ),
            'ListSpecs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSpecs,
                    request_deserializer=specs__pb2.ListSpecsRequest.FromString,
                    response_serializer=specs__pb2.ListSpecsResponse.SerializeToString,
            ),
            'ListSpecsPrefabs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSpecsPrefabs,
                    request_deserializer=specs__pb2.ListSpecsPrefabsRequest.FromString,
                    response_serializer=specs__pb2.ListSpecsPrefabsResponse.SerializeToString,
            ),
            'NewPrefab': grpc.unary_unary_rpc_method_handler(
                    servicer.NewPrefab,
                    request_deserializer=prefab__pb2.NewPrefabRequest.FromString,
                    response_serializer=prefab__pb2.NewPrefabResponse.SerializeToString,
            ),
            'AddReferences': grpc.unary_unary_rpc_method_handler(
                    servicer.AddReferences,
                    request_deserializer=reference__pb2.AddReferencesRequest.FromString,
                    response_serializer=reference__pb2.AddReferencesResponse.SerializeToString,
            ),
            'RemoveReferences': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveReferences,
                    request_deserializer=reference__pb2.RemoveReferencesRequest.FromString,
                    response_serializer=reference__pb2.RemoveReferencesResponse.SerializeToString,
            ),
            'ListReferences': grpc.unary_unary_rpc_method_handler(
                    servicer.ListReferences,
                    request_deserializer=reference__pb2.ListReferencesRequest.FromString,
                    response_serializer=reference__pb2.ListReferencesResponse.SerializeToString,
            ),
            'ChangeReference': grpc.unary_unary_rpc_method_handler(
                    servicer.ChangeReference,
                    request_deserializer=reference__pb2.ChangeReferencePrefabRequest.FromString,
                    response_serializer=reference__pb2.ChangeReferencePrefabResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'io.knitter.KnitterGrpc', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class KnitterGrpc(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetManages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetManages',
            manage__pb2.GetManagesRequest.SerializeToString,
            manage__pb2.GetManagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetManageEntryCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetManageEntryCount',
            manage__pb2.GetManageEntryCountRequest.SerializeToString,
            manage__pb2.GetManageEntryCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetManageSchema(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetManageSchema',
            manage__schema__pb2.GetManageSchemaRequest.SerializeToString,
            manage__schema__pb2.GetManageSchemaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkSchemaFieldRemoved(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/MarkSchemaFieldRemoved',
            manage__schema__pb2.MarkSchemaFieldRemovedRequest.SerializeToString,
            manage__schema__pb2.MarkSchemaFieldRemovedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeManageReadRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/ChangeManageReadRule',
            view__pb2.ChangeManageReadRuleRequest.SerializeToString,
            view__pb2.ChangeManageReadRuleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeManageWriteRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/ChangeManageWriteRule',
            view__pb2.ChangeManageWriteRuleRequest.SerializeToString,
            view__pb2.ChangeManageWriteRuleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeCollectionReadRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/ChangeCollectionReadRule',
            view__pb2.ChangeCollectionReadRuleRequest.SerializeToString,
            view__pb2.ChangeCollectionReadRuleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeCollectionWriteRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/ChangeCollectionWriteRule',
            view__pb2.ChangeCollectionWriteRuleRequest.SerializeToString,
            view__pb2.ChangeCollectionWriteRuleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeFieldReadRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/ChangeFieldReadRule',
            view__pb2.ChangeFieldReadRuleRequest.SerializeToString,
            view__pb2.ChangeFieldReadRuleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeFieldWriteRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/ChangeFieldWriteRule',
            view__pb2.ChangeFieldWriteRuleRequest.SerializeToString,
            view__pb2.ChangeFieldWriteRuleResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetEntity',
            entity__pb2.GetEntityRequest.SerializeToString,
            entity__pb2.GetEntityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEntities(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetEntities',
            entity__pb2.GetEntitiesRequest.SerializeToString,
            entity__pb2.GetEntitiesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEntitiesPage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetEntitiesPage',
            entity__pb2.GetEntitiesPageRequest.SerializeToString,
            entity__pb2.GetEntitiesPageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkEntityRemoved(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/MarkEntityRemoved',
            entity__pb2.MarkEntityRemovedRequest.SerializeToString,
            entity__pb2.MarkEntityRemovedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RecoverRemovedEntity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/RecoverRemovedEntity',
            entity__pb2.RecoverRemovedEntityRequest.SerializeToString,
            entity__pb2.RecoverRemovedEntityResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRemovedEntitiesPage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetRemovedEntitiesPage',
            entity__pb2.GetRemovedEntitiesPageRequest.SerializeToString,
            entity__pb2.GetRemovedEntitiesPageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditEntityField(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/EditEntityField',
            entity__pb2.EditEntityFieldRequest.SerializeToString,
            entity__pb2.EditEntityFieldResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditEntityMapField(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/EditEntityMapField',
            entity__pb2.EditEntityMapFieldRequest.SerializeToString,
            entity__pb2.EditEntityMapFieldResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditEntityMapFieldRemoveKey(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/EditEntityMapFieldRemoveKey',
            entity__pb2.EditEntityMapFieldRemoveKeyRequest.SerializeToString,
            entity__pb2.EditEntityMapFieldRemoveKeyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditEntityArrayFieldAddItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/EditEntityArrayFieldAddItems',
            entity__pb2.EditEntityArrayFieldAddItemsRequest.SerializeToString,
            entity__pb2.EditEntityArrayFieldAddItemsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditEntityArrayFieldRemoveItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/EditEntityArrayFieldRemoveItems',
            entity__pb2.EditEntityArrayFieldRemoveItemsRequest.SerializeToString,
            entity__pb2.EditEntityArrayFieldRemoveItemsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Rename(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/Rename',
            name__pb2.RenameRequest.SerializeToString,
            name__pb2.RenameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewLanguageName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/NewLanguageName',
            name__pb2.NewLanguageNameRequest.SerializeToString,
            name__pb2.NewLanguageNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewCountry(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/NewCountry',
            country__pb2.NewCountryRequest.SerializeToString,
            country__pb2.NewCountryResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewLanguageCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/NewLanguageCode',
            language__code__pb2.NewLanguageCodeRequest.SerializeToString,
            language__code__pb2.NewLanguageCodeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewGroup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/NewGroup',
            group__pb2.NewGroupRequest.SerializeToString,
            group__pb2.NewGroupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDataServerConfigs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetDataServerConfigs',
            data__server__pb2.GetDataServerConfigsRequest.SerializeToString,
            data__server__pb2.GetDataServerConfigsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/NewData',
            data__pb2.NewDataRequest.SerializeToString,
            data__pb2.NewDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/ListData',
            data__pb2.ListDataRequest.SerializeToString,
            data__pb2.ListDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListDataStages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/ListDataStages',
            data__stage__pb2.ListDataStagesRequest.SerializeToString,
            data__stage__pb2.ListDataStagesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddDataStageVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/AddDataStageVersion',
            data__stage__pb2.AddDataStageVersionRequest.SerializeToString,
            data__stage__pb2.AddDataStageVersionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkDataRemoved(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/MarkDataRemoved',
            data__pb2.MarkDataRemovedRequest.SerializeToString,
            data__pb2.MarkDataRemovedResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FileDataUploadFile(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/io.knitter.KnitterGrpc/FileDataUploadFile',
            file__data__pb2.FileDataUploadFileRequest.SerializeToString,
            file__data__pb2.FileDataUploadFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FileDataDownloadFile(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/io.knitter.KnitterGrpc/FileDataDownloadFile',
            file__data__pb2.FileDataDownloadFileRequest.SerializeToString,
            file__data__pb2.FileDataDownloadFileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/NewProject',
            project__pb2.NewProjectRequest.SerializeToString,
            project__pb2.NewProjectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssociateAssetCollectionsToProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/AssociateAssetCollectionsToProject',
            project__pb2.AssociateAssetCollectionsToProjectRequest.SerializeToString,
            project__pb2.AssociateAssetCollectionsToProjectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AssociateSetCollectionsToProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/AssociateSetCollectionsToProject',
            project__pb2.AssociateSetCollectionsToProjectRequest.SerializeToString,
            project__pb2.AssociateSetCollectionsToProjectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProjectAssociatedAssetCollections(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetProjectAssociatedAssetCollections',
            project__pb2.GetProjectAssociatedAssetCollectionsRequest.SerializeToString,
            project__pb2.GetProjectAssociatedAssetCollectionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProjectAssociatedSetCollections(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetProjectAssociatedSetCollections',
            project__pb2.GetProjectAssociatedSetCollectionsRequest.SerializeToString,
            project__pb2.GetProjectAssociatedSetCollectionsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewAssetCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/NewAssetCollection',
            asset__collection__pb2.NewAssetCollectionRequest.SerializeToString,
            asset__collection__pb2.NewAssetCollectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssetCollectionAssetTotalPagesCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetAssetCollectionAssetTotalPagesCount',
            asset__collection__pb2.GetAssetCollectionAssetTotalPagesCountRequest.SerializeToString,
            asset__collection__pb2.GetAssetCollectionAssetTotalPagesCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssetCollectionAssemblyTotalPagesCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetAssetCollectionAssemblyTotalPagesCount',
            asset__collection__pb2.GetAssetCollectionAssemblyTotalPagesCountRequest.SerializeToString,
            asset__collection__pb2.GetAssetCollectionAssemblyTotalPagesCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssetCollectionAssetsPage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetAssetCollectionAssetsPage',
            asset__collection__pb2.GetAssetCollectionAssetsPageRequest.SerializeToString,
            asset__collection__pb2.GetAssetCollectionAssetsPageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssetCollectionAssembliesPage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetAssetCollectionAssembliesPage',
            asset__collection__pb2.GetAssetCollectionAssembliesPageRequest.SerializeToString,
            asset__collection__pb2.GetAssetCollectionAssembliesPageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkAssetCollectionStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/MarkAssetCollectionStatus',
            asset__collection__pb2.MarkAssetCollectionStatusRequest.SerializeToString,
            asset__collection__pb2.MarkAssetCollectionStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewAsset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/NewAsset',
            asset__pb2.NewAssetRequest.SerializeToString,
            asset__pb2.NewAssetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetReferencedAssets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetReferencedAssets',
            asset__pb2.GetReferencedAssetsRequest.SerializeToString,
            asset__pb2.GetReferencedAssetsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkAssetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/MarkAssetStatus',
            asset__pb2.MarkAssetStatusRequest.SerializeToString,
            asset__pb2.MarkAssetStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewAssembly(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/NewAssembly',
            assembly__pb2.NewAssemblyRequest.SerializeToString,
            assembly__pb2.NewAssemblyResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewEpic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/NewEpic',
            epic__pb2.NewEpicRequest.SerializeToString,
            epic__pb2.NewEpicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetEpicSequences(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetEpicSequences',
            epic__pb2.GetEpicSequencesRequest.SerializeToString,
            epic__pb2.GetEpicSequencesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewSequence(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/NewSequence',
            sequence__pb2.NewSequenceRequest.SerializeToString,
            sequence__pb2.NewSequenceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSequenceCuts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetSequenceCuts',
            sequence__pb2.GetSequenceCutsRequest.SerializeToString,
            sequence__pb2.GetSequenceCutsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewCut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/NewCut',
            cut__pb2.NewCutRequest.SerializeToString,
            cut__pb2.NewCutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCutReferencedAssets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/GetCutReferencedAssets',
            cut__pb2.GetCutReferencedAssetsRequest.SerializeToString,
            cut__pb2.GetCutReferencedAssetsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkCutStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/MarkCutStatus',
            cut__pb2.MarkCutStatusRequest.SerializeToString,
            cut__pb2.MarkCutStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewSetCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/NewSetCollection',
            set__collection__pb2.NewSetCollectionRequest.SerializeToString,
            set__collection__pb2.NewSetCollectionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewSet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/NewSet',
            set__pb2.NewSetRequest.SerializeToString,
            set__pb2.NewSetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MarkSetSatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/MarkSetSatus',
            set__pb2.MarkSetStatusRequest.SerializeToString,
            set__pb2.MarkSetStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewSpecs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/NewSpecs',
            specs__pb2.NewSpecsRequest.SerializeToString,
            specs__pb2.NewSpecsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSpecs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/ListSpecs',
            specs__pb2.ListSpecsRequest.SerializeToString,
            specs__pb2.ListSpecsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSpecsPrefabs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/ListSpecsPrefabs',
            specs__pb2.ListSpecsPrefabsRequest.SerializeToString,
            specs__pb2.ListSpecsPrefabsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NewPrefab(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/NewPrefab',
            prefab__pb2.NewPrefabRequest.SerializeToString,
            prefab__pb2.NewPrefabResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AddReferences(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/AddReferences',
            reference__pb2.AddReferencesRequest.SerializeToString,
            reference__pb2.AddReferencesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RemoveReferences(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/RemoveReferences',
            reference__pb2.RemoveReferencesRequest.SerializeToString,
            reference__pb2.RemoveReferencesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListReferences(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/ListReferences',
            reference__pb2.ListReferencesRequest.SerializeToString,
            reference__pb2.ListReferencesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChangeReference(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/io.knitter.KnitterGrpc/ChangeReference',
            reference__pb2.ChangeReferencePrefabRequest.SerializeToString,
            reference__pb2.ChangeReferencePrefabResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
